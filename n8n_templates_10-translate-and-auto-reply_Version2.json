{
  "name": "10 - Translate Messages and Auto-Reply",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "messages/translate-reply",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "1",
      "name": "Webhook - Translate/Reply",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-960, 20]
    },
    {
      "parameters": {
        "assignments": {
          "mode": "auto",
          "assignments": [
            { "id": "text", "name": "text", "type": "string", "value": "={{$json.text || ''}}" },
            { "id": "targetLang", "name": "targetLang", "type": "string", "value": "={{$json.targetLang || 'en'}}" },
            { "id": "sendEmail", "name": "sendEmail", "type": "boolean", "value": "={{$json.sendEmail || false}}" },
            { "id": "toEmail", "name": "toEmail", "type": "string", "value": "={{$json.toEmail || ''}}" }
          ]
        }
      },
      "id": "2",
      "name": "Normalize",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [-720, 20]
    },
    {
      "parameters": {
        "functionCode": "const sys = 'Translate the user message to the target language. Return JSON {translated, reply}. The reply should be a short, polite response in the target language.';\nconst user = JSON.stringify({ text: $json.text, target: $json.targetLang });\nreturn [{ payload: { model: $env.OPENAI_MODEL || 'gpt-4o-mini', temperature: 0.2, response_format: {type:'json_object'}, messages: [ {role:'system', content: sys}, {role:'user', content: user} ] } }];"
      },
      "id": "3",
      "name": "Build LLM Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-480, 20]
    },
    {
      "parameters": {
        "url": "={{$env.OPENAI_BASE_URL || 'https://api.openai.com/v1/chat/completions'}}",
        "requestMethod": "POST",
        "jsonParameters": true,
        "sendBinaryData": false,
        "headerParametersJson": "={{ { 'Authorization': 'Bearer ' + $env.OPENAI_API_KEY, 'Content-Type': 'application/json' } }}",
        "bodyParametersJson": "={{ $json.payload }}"
      },
      "id": "4",
      "name": "OpenAI - Translate+Reply",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-240, 20]
    },
    {
      "parameters": {
        "functionCode": "let c = $json.choices?.[0]?.message?.content || '{}';\nlet parsed; try { parsed = JSON.parse(c); } catch(e){ parsed = { translated: '', reply: '' }; }\nreturn [{ translated: parsed.translated, reply: parsed.reply }];"
      },
      "id": "5",
      "name": "Parse JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [0, 20]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMail",
        "toList": "={{$items(0).item.json.toEmail}}",
        "subject": "={{'Reply (' + ($items(0).item.json.targetLang || 'en') + ')'}}",
        "message": "={{$json.reply}}",
        "additionalFields": { "contentType": "Text" }
      },
      "id": "6",
      "name": "Outlook - Send Email (optional)",
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [240, -80],
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "",
          "name": "M365_OUTLOOK_CREDENTIAL"
        }
      }
    },
    {
      "parameters": {
        "conditions": { "boolean": [{ "value1": "={{$items(0).item.json.sendEmail}}", "operation": "isTrue" }] }
      },
      "id": "7",
      "name": "IF Send Email",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [240, 20]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseBody": "={{ { translated: $json.translated, reply: $json.reply, sent: ($items(1).item.json.sendEmail || false) } }}"
      },
      "id": "8",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [500, 20]
    }
  ],
  "connections": {
    "Webhook - Translate/Reply": { "main": [[{ "node": "Normalize", "type": "main", "index": 0 }]] },
    "Normalize": { "main": [[{ "node": "Build LLM Payload", "type": "main", "index": 0 }]] },
    "Build LLM Payload": { "main": [[{ "node": "OpenAI - Translate+Reply", "type": "main", "index": 0 }]] },
    "OpenAI - Translate+Reply": { "main": [[{ "node": "Parse JSON", "type": "main", "index": 0 }]] },
    "Parse JSON": { "main": [[{ "node": "IF Send Email", "type": "main", "index": 0 }]] },
    "IF Send Email": {
      "main": [
        [{ "node": "Outlook - Send Email (optional)", "type": "main", "index": 0 }],
        [{ "node": "Respond", "type": "main", "index": 0 }]
      ]
    },
    "Outlook - Send Email (optional)": { "main": [[{ "node": "Respond", "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": { "executionOrder": "v1" },
  "id": "10-translate-and-auto-reply"
}