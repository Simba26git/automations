{
  "name": "13 - Tone Detection & Escalation (HF + Optional Alerts)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "support/tone-escalation",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "1",
      "name": "Webhook - Message",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-900, 20]
    },
    {
      "parameters": {
        "assignments": {
          "mode": "auto",
          "assignments": [
            { "id": "text", "name": "text", "type": "string", "value": "={{$json.text || ''}}" },
            { "id": "threshold", "name": "threshold", "type": "number", "value": "={{$json.threshold || Number($env.ESCALATION_THRESHOLD || 0.8)}}" },
            { "id": "ticketId", "name": "ticketId", "type": "string", "value": "={{$json.ticketId || ''}}" }
          ]
        }
      },
      "id": "2",
      "name": "Normalize",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [-680, 20]
    },
    {
      "parameters": {
        "url": "={{'https://api-inference.huggingface.co/models/' + ($env.HF_EMOTION_MODEL || 'j-hartmann/emotion-english-distilroberta-base')}}",
        "requestMethod": "POST",
        "jsonParameters": true,
        "sendBinaryData": false,
        "headerParametersJson": "={{ { 'Authorization': 'Bearer ' + $env.HUGGINGFACE_API_KEY, 'Content-Type': 'application/json' } }}",
        "bodyParametersJson": "={{ { inputs: $json.text } }}"
      },
      "id": "3",
      "name": "HF - Emotion Classification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-460, 20]
    },
    {
      "parameters": {
        "functionCode": "const groups = Array.isArray($json) ? $json[0] : ($json || []);\nconst top = Array.isArray(groups) ? groups.reduce((a,b)=> (b.score||0)>(a.score||0)?b:a, {label:'neutral',score:0}) : {label:'neutral',score:0};\nconst label = (top.label||'neutral').toLowerCase();\nconst score = Number(top.score||0);\nconst angry = ['anger','angry','frustration','disgust','annoyance'].some(k => label.includes(k));\nconst escalate = angry && score >= Number($items(0).item.json.threshold || 0.8);\nreturn [{ label, score, escalate }];"
      },
      "id": "4",
      "name": "Parse & Decide",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-220, 20]
    },
    {
      "parameters": {
        "conditions": { "boolean": [{ "value1": "={{$json.escalate}}", "operation": "isTrue" }] }
      },
      "id": "5",
      "name": "IF Escalate",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [20, 20]
    },
    {
      "parameters": {
        "url": "={{$env.ESCALATION_WEBHOOK_URL || ''}}",
        "requestMethod": "POST",
        "jsonParameters": true,
        "sendBinaryData": false,
        "headerParametersJson": "={{ $env.ESCALATION_WEBHOOK_URL ? { 'Content-Type': 'application/json' } : {} }}",
        "bodyParametersJson": "={{ $env.ESCALATION_WEBHOOK_URL ? { type: 'tone_escalation', ticketId: $items(0).item.json.ticketId, label: $json.label, score: $json.score, text: $items(0).item.json.text, createdAt: new Date().toISOString() } : {} }}"
      },
      "id": "6",
      "name": "Notify (optional)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [260, -80]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseBody": "={{ { label: $json.label, score: $json.score, escalate: $json.escalate } }}"
      },
      "id": "7",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [260, 120]
    }
  ],
  "connections": {
    "Webhook - Message": { "main": [[{ "node": "Normalize", "type": "main", "index": 0 }]] },
    "Normalize": { "main": [[{ "node": "HF - Emotion Classification", "type": "main", "index": 0 }]] },
    "HF - Emotion Classification": { "main": [[{ "node": "Parse & Decide", "type": "main", "index": 0 }]] },
    "Parse & Decide": { "main": [[{ "node": "IF Escalate", "type": "main", "index": 0 }]] },
    "IF Escalate": {
      "main": [
        [{ "node": "Notify (optional)", "type": "main", "index": 0 }],
        [{ "node": "Respond", "type": "main", "index": 0 }]
      ]
    },
    "Notify (optional)": { "main": [[{ "node": "Respond", "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": { "executionOrder": "v1" },
  "id": "13-support-tone-escalation"
}