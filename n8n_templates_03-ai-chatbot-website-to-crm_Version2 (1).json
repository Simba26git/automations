{
  "name": "03 - AI Chatbot (Website) with CRM Handoff",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot/message",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "1",
      "name": "Webhook - Chat Message",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-1060, 60]
    },
    {
      "parameters": {
        "assignments": {
          "mode": "auto",
          "assignments": [
            { "id": "sessionId", "name": "sessionId", "type": "string", "value": "={{$json.sessionId || $json.userId || ''}}" },
            { "id": "message", "name": "message", "type": "string", "value": "={{$json.message || ''}}" },
            { "id": "history", "name": "history", "type": "json", "value": "={{$json.history || []}}" },
            { "id": "language", "name": "language", "type": "string", "value": "={{$json.language || 'en'}}" }
          ]
        }
      },
      "id": "2",
      "name": "Normalize",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [-820, 60]
    },
    {
      "parameters": {
        "functionCode": "const system = `You are a helpful website chatbot. Answer briefly. If the user asks for pricing, demos, or complex sales, set handoff=true with reason. Output JSON {reply, handoff, reason}. Respond in ${$json.language}.`;\nconst messages = [{role:'system', content: system}];\nconst hist = Array.isArray($json.history) ? $json.history : [];\nhist.forEach(h => messages.push({role: h.role || 'user', content: h.content || ''}));\nmessages.push({role:'user', content: $json.message || ''});\nreturn [{ payload: { model: $env.OPENAI_MODEL || 'gpt-4o-mini', temperature: Number($env.OPENAI_TEMPERATURE || 0.3), response_format: {type:'json_object'}, messages } }];"
      },
      "id": "3",
      "name": "Build LLM Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-580, 60]
    },
    {
      "parameters": {
        "url": "={{$env.OPENAI_BASE_URL || 'https://api.openai.com/v1/chat/completions'}}",
        "requestMethod": "POST",
        "jsonParameters": true,
        "sendBinaryData": false,
        "headerParametersJson": "={{ { 'Authorization': 'Bearer ' + $env.OPENAI_API_KEY, 'Content-Type': 'application/json' } }}",
        "bodyParametersJson": "={{ $json.payload }}"
      },
      "id": "4",
      "name": "OpenAI - Chatbot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-340, 60]
    },
    {
      "parameters": {
        "functionCode": "let content = $json.choices?.[0]?.message?.content || '{}';\nlet parsed; try { parsed = JSON.parse(content); } catch(e) { parsed = { reply: 'Sorry, I had trouble understanding. A human will join shortly.', handoff: true, reason: 'parse_error' }; }\nreturn [{ reply: parsed.reply || '', handoff: !!parsed.handoff, reason: parsed.reason || '' }];"
      },
      "id": "5",
      "name": "Parse Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-100, 60]
    },
    {
      "parameters": {
        "conditions": { "boolean": [{ "value1": "={{$json.handoff}}", "operation": "isTrue" }] }
      },
      "id": "6",
      "name": "IF Handoff",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [140, 60]
    },
    {
      "parameters": {
        "url": "={{$env.CRM_WEBHOOK_URL || ''}}",
        "requestMethod": "POST",
        "jsonParameters": true,
        "sendBinaryData": false,
        "headerParametersJson": "={{ $env.CRM_WEBHOOK_URL ? { 'Content-Type': 'application/json' } : {} }}",
        "bodyParametersJson": "={{ $env.CRM_WEBHOOK_URL ? { type: 'chat_handoff', sessionId: $items(0).item.json.sessionId, message: $items(0).item.json.message, reason: $json.reason, createdAt: new Date().toISOString() } : {} }}"
      },
      "id": "7",
      "name": "Create CRM Handoff (optional)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [380, -60]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseBody": "={{ { reply: $json.reply, handoff: $json.handoff, reason: $json.reason } }}"
      },
      "id": "8",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [380, 160]
    }
  ],
  "connections": {
    "Webhook - Chat Message": { "main": [[{ "node": "Normalize", "type": "main", "index": 0 }]] },
    "Normalize": { "main": [[{ "node": "Build LLM Payload", "type": "main", "index": 0 }]] },
    "Build LLM Payload": { "main": [[{ "node": "OpenAI - Chatbot", "type": "main", "index": 0 }]] },
    "OpenAI - Chatbot": { "main": [[{ "node": "Parse Reply", "type": "main", "index": 0 }]] },
    "Parse Reply": { "main": [[{ "node": "IF Handoff", "type": "main", "index": 0 }]] },
    "IF Handoff": {
      "main": [
        [{ "node": "Create CRM Handoff (optional)", "type": "main", "index": 0 }],
        [{ "node": "Respond", "type": "main", "index": 0 }]
      ]
    },
    "Create CRM Handoff (optional)": { "main": [[{ "node": "Respond", "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": { "executionOrder": "v1" },
  "id": "03-ai-chatbot-website-to-crm"
}